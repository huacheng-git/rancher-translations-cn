advancedSection:
  hideText: 隱藏高級選項
  showText: 顯示高級選項
apiPage:
  actionButton: 添加Key
  currentEndpoint: "訪問地址:"
  detail: "API 密鑰與特定用戶 (例如: {name}) 綁定，可以創建、刪除和操作有權訪問的所有集群和項目。"
  header: API & Keys
  table:
    created: 創建時間
    description: 描述
    expires:
      label: 過期時間
      never: 永不過期
    name: 訪問密鑰
    noData: 沒有配置 API 密鑰
    scope: 範圍
    state: 狀態
banner:
  alerting: 從 Rancher v2.5.0 開始，Cluster Manager 中的 Alerts 已不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。請在 Cluster Explorer 應用程序和市場中查看 Rancher 新版<a href="{dashboardLink}/monitoring">監控</a>中 Alerts 的集成。
  cis: 從 Rancher v2.5.0 開始，Cluster Manager 中的 CIS 掃描功能已不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。對於使用基準版本 1.5 及以上的 CIS 掃描，請參見 Cluster Explorer 應用程序和市場中新版 <a href="{dashboardLink}/cis">CIS 掃描</a>。
  dashboard: 請嘗試使用 <a href="{dashboardLink}">Cluster Explorer</a> 查看和管理 Kubernetes 資源。
  istio: Istio 已經停止在 Cluster Manager 中維護，請在 Cluster Explorer 應用程序和市場中查看新版的 <a href="{dashboardLink}/istio">Istio</a>。
  logging: 從 Rancher v2.5.0 開始，Cluster Manager 中的 Logging 已不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。請在 Cluster Explorer 應用程序和市場中查看新版的 <a href="{dashboardLink}/logging">Logging</a>。
  monitoring: 從 Rancher v2.5.0 開始，Cluster Manager 中的監控已經不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。請在 Cluster Explorer 應用程序和市場中查看新版的<a href="{dashboardLink}/monitoring">監控</a>。
  monitoringV2Warning: 從 Rancher v2.5.0 開始，Cluster Manager 中的監控已經不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。最新版的Rancher <a href="{dashboardLink}/monitoring">監控</a> 已經部署。
  multiclusterapp: 從 Rancher v2.5.0 開始，多集群應用已不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。請查看 <a href="{dashboardBase}c/local/fleet">Rancher 持續交付</a>功能，通過 GitOps 實現多集群應用的部署。
  notifiers: 從 Rancher v2.5.0 開始，Cluster Manager 中的 Notifiers 已經不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。請在 Cluster Explorer 應用程序和市場中查看 Rancher 新版<a href="{dashboardLink}/monitoring">監控</a>中 Notifiers 的集成。
  pipeline: 從 Rancher v2.5.0 開始，Pipelines 已經不推薦使用 - 請查看 <a href="https://rancher.com/docs/rancher/v2.x/en/faq/deprecated-features-25x" target="_blank">FAQ</a>。有關持續交付功能，請查看 Cluster Explorer 中的 <a href="{dashboardBase}c/local/fleet">Rancher 持續交付</a>。
certificatesPage:
  algorithm: 算法
  cn: 域名
  detail:
    header: "證書: {name}"
  domainNames:
    labelText: 域名
    single: <a href="https://{cn}" target="_blank" rel="nofollow noreferrer noopener">{cn} <i class="icon icon-sm icon-external-link"/></a>
    wildcardSingle: "{cn}"
    wildcardWithSan: "{cn} +\\n{sans, plural,\\n=1 {1 other}\\nother {# others}\\n}\\n"
    withSan: "<a href=\\"https://{cn}\\" target=\\"_blank\\" rel=\\"nofollow nefererrer noopener\\">{cn} <i class=\\"icon icon-sm icon-external-link\\"></i></a> +\\n{sans, plural,\\n=1 {1 other}\\nother {# others}\\n}\\n"
  expires: 過期時間
  expiresDate: 過期時間
  fingerprint: 指紋
  index:
    header: 證書列表
    linkTo: 添加證書
    noData: 沒有配置證書
    noMatch: 沒有證書與當前搜索匹配
  issuer: 發布機構
  new:
    form:
      description:
        placeholder: "例如: mydomain.com 的 EV 證書"
      name:
        placeholder: e.g. mydomain.com
    header: 添加證書
  serialNumber: 序列號
  valid: 生效時間
clusterIstioPage:
  allowSystemGroup:
    "false": 允許集群所有者和指定的</b>成員訪問 Kiali 和 Jaeger UI。
    "true": 允許<b>所有</b>成員訪問 Kiali 和 Jaeger UI。
  config:
    gatewayEnabled:
      label: 啟用 Ingress 網關
    gatewayType:
      label: Ingress 網關的服務類型
    grafanaEnabled:
      label: 啟用 Grafana
    grafanaPersistenceEnabled:
      label: 為 Grafana 啟用持久存儲
    header:
      gateway: Ingress 網關
      grafana: Grafana
      mixer: Mixer
      pilot: Pilot
      prometheus: Prometheus
      tracing: 跟蹤
    http2Port:
      label: Http2 端口
    httpsPort:
      label: Https 端口
    loadBalancerIP:
      label: Load Balancer IP
      placeholder: "例如: 192.0.0.1"
    mixerPolicyEnabled:
      label: Enable Mixer Policy
    mtlsEnabled:
      label: 服務到服務雙向 TLS
    prometheusRetention:
      label: Prometheus 數據保留
      placeholder: "例如: 6h"
    traceSampling:
      label: 跟蹤抽樣比例
      placeholder: "例如: 1"
    tracingEnabled:
      label: 啟用跟蹤
  confirmDisable: 你確定嗎?再次單擊將禁用 Istio
  customAnswers:
    detail: 配置自定義的應答。
    title: 自定義應答
    warning: "自定義應答是一個高級配置選項。{appName}預配置了一些自定義應答, 以保證能滿足一些 <a href=\'https://istio.io/latest/docs/setup/additional-setup/cni/#prerequisites\' target=\'_blank\' rel=\'nofollow noreferrer\'>特定</a> 的Istio配置。 添加和移除自定義應答可能會生成一些無效的Istio配置。在保存修改之前，請確保您明白這些改動可能會帶來的結果。"
  disable: 禁用
  disabled: Istio 尚未啟用，請單擊“啟用”按鈕啟用它。
  enableActionLabel: 啟用
  enableMonitoring:
    label: 啟用監控
  enabled: Istio 已啟用。為了利用 Istio，您需要為每個命名空間啟用 Istio sidecar 自動注入。如果在現有命名空間上啟用它，則需要重新部署現有工作負載，以利用 sidecar 自動注入。
  existingClaim:
    label: Existing Claim for {component}
  goToMonitoring: istio 的工作需要監控。 如果您想修改這些值，請轉到 <a href="/c/{clusterId}/monitoring/cluster-setting">監控</a> 頁面修改並保存。
  header: Istio
  ingress:
    detail: 監控和路由規則配置。
    title: Ingress 網關
  insufficientSize:
    selectors:
      all: 請確保至少有一個節點與 {cpu} milli cpu 和 {memory} MiB 內存匹配，以啟用 {component} 工作負載。
      cpu: 請確保至少有一個節點將節點選擇器與 {cpu} milli CPUs 匹配，以啟用 {component} 工作負載。
      memory: 請確保至少有一個節點將節點選擇器與 {memory} MiB 內存匹配，以啟用 {component} 工作負載。
      unsupported: 不支持值為 true、false 或 number 的節點選擇器
    total:
      all: 請確保至少有 {minCpu} milli CPUs 和 {minMemory} MiB 內存可供 {action} Istio 使用。
      cpu: 請確保至少有 {minCpu} milli CPUs 可供 {action} Istio 使用。
      memory: 請確保您至少有 {minMemory} MiB 的內存可供 {action} Istio 使用。
    workload:
      all: 請確保至少有一個節點具有 {cpu} milli CPUs 和 {memory} MiB 內存，可用來部署 {component} 工作負載。
      cpu: 請確保至少有一個具有 {cpu} milli CPUs 的節點可用來部署 {component} 工作負載。
      memory: 請確保您至少有一個具有 {memory} MiB 內存的節點可用來部署 {component} 工作負載。
  links:
    grafana:
      label: Grafana UI
    jaeger:
      label: Jaeger UI
    kiali:
      label: Kiali UI
    prometheus:
      label: Prometheus UI
  members:
    detail: 控制哪些用戶能訪問 Kiali 和 Jaeger UI
    title: 成員訪問
  mixer:
    detail: 常規策略和遙測配置。
    title: Mixer
  monitoringNotDeployed: 監控仍在部署中。 在確保集群中有足夠的資源啟用 Istio 之前，請等待監控部署完成。
  nodeSelector:
    addSelectorLabel: 添加選擇器
    helpText: 選擇要運行 {component} 工作負載的節點
  notReady: 在當前集群中安裝 Istio…
  pilot:
    detail: 配置流量管理
    title: Pilot
  telemetryAndPolicy: Telemetry And Policy
  tracing:
    detail: 配置跟蹤請求。
    title: 跟蹤
  upgradeMonitoring: 在啟用 Istio 之前，您需要首先將集群監視升級到 0.0.4 或更高版本。訪問 <a href="/c/{clusterId}/monitoring/cluster-setting">此處</a> 去升級集群監控。
  version: Istio 版本
  warning:
    mixerBreaking: Istio升級到1.8需要先禁用再重新啟用
clusterPage:
  annotationsDetail: 為集群配置標籤和注釋。
  edit: 編輯集群
  internal: "<b>警告: </b>{appName} 集群用作數據存儲，只應授予管理員擁有寫入權限。<br>對此集群具有寫入權限的用戶，可以使用它授予自己安裝並管理的其他集群的訪問權限。"
  removeMemberNote: "注意: 刪除成員不會刪除其項目權限。"
configMapsPage:
  index:
    header: 配置映射
    linkTo: 添加配置映射
    noData: 沒有配置配置映射
    noMatch: 沒有配置映射與當前搜索匹配
  table:
    keys: 鍵
containersPage:
  table:
    noData: 沒有容器顯示
    noMatch: 沒有符合當前搜索的容器
    sparkPrefixCpu: "CPU: "
    sparkPrefixMemory: "內存: "
    sparkPrefixNetwork: "網絡: "
    sparkPrefixStorage: "存儲: "
  welcome:
    container: 立即開始
    containerLink: 添加容器
    kubernetesLink: 安裝 Kubernetes
    orchestrator: Install another orchestrator
cruVolumeClaimTemplate:
  capacity:
    label: 容量
    unit: GiB
  customize:
    detail: 自定義高級設置
    title: 自定義
  define:
    addActionLabel: 確定
  name:
    placeholder: e.g. myvol
  pv:
    label: 持久卷 (PV)
    prompt: 選擇持久卷 (PV)...
  source:
    label: 來源
    pv: 使用已有的持久卷 (PV)
    storageClass: 使用存儲類創建新的持久卷 (PV)
  storageClass:
    label: 存儲類 (Storage Class)
    prompt: 使用默認 (Storage Class)
  title:
    define: 配置 PVC 模板
    edit: "編輯 PVC 模板: {name}"
    new: 添加 PVC 模板
    view: "PVC 模板: {name}"
destinationRulePage:
  noData: 沒有定義目標規則。
  noMatch: 沒有與當前搜索匹配的目標規則
  notSupported: 集群 networking.istio.io/v1alpha3 API 不可用。
  table:
    host:
      label: Host
    subsets:
      label: Subsets
editHost:
  customName:
    help: 如果此處未配置，名稱將顯示為主機名。
    label: 自定義名稱
    placeholder: "例如: dev1"
  description:
    label: 描述
    placeholder: "例如: 我的開發主機"
  hostname:
    help: 由主機操作系統獲取
    label: 主機名
  ips:
    addActionLabel: 添加 IP
    help: 如果設置，調度器將從中選擇一個 IP 地址並將發布的端口綁定到該地址。
    label: 調度 IP
    valueLabel: IP 地址
    valuePlaceholder: "例如: 1.2.3.4"
  labels:
    label: 標籤
  requireAny:
    addActionLabel: 添加標籤需求
    help: 如果設置，容器必須具備設置的一個或者多個標籤才能夠被調度到該主機。如果僅設置 Key 而 Value 留空，具備相應 Key 的容器可以被調度到該主機而忽略 Value 的值。<code>io.rancher.container.system</code>標籤是運行系統容器所必須的。
    label: 容器標籤需求
  title: 編輯主機
editNodePool:
  title: 節點池污點（Taints）
editService:
  title: 編輯服務
editUser:
  form:
    name:
      label: 顯示名稱
      placeholder: "例如: John Smith"
    otherRoles:
      label: 移除角色
    password:
      confirm: 確認密碼
      error: 密碼必須相同
      label: 修改密碼
      mustChangePassword:
        edit: 要求用戶在下次登錄時更改密碼
        new: 要求用戶在首次登錄時更改密碼
      new: 新密碼
    username:
      label: 用戶名
  title: 編輯用戶
failWhalePage:
  header: 錯誤
  logoutButton: 註銷
  reloadButton: "<a href=\\"#\\" onclick=\\"window.location.href = window.location.href; return false;\\"> 重新加載 </a> 或\\n"
formAccessModes:
  accessROX: 多主機只讀
  accessRWO: 單主機讀寫
  accessRWX: 多主機讀寫
  label: 訪問模式
formBalancerRules:
  access:
    internal: 內部
    label: 訪問
    public: 公開
  addInstanceLabel: 添加容器
  addSelectorLabel: 添加選擇器
  addServiceLabel: 添加服務
  addTargetLabel: 添加規則
  backendName:
    label: 後端
    placeholder: "例如: webapp"
  detail: 根據主機、 端口、 路徑或 IP 地址映射請求到不同的目標。
  hostname:
    label: 請求頭信息
    placeholder: "例如: example.com"
  label: 目標規則
  noRules: 無規則
  path:
    label: 路徑
    placeholder: "例如: /foo"
  priority:
    label: 優先級
  protocol:
    label: 協議
  selector:
    label: 選擇器
    placeholder: "例如: foo=bar"
  sourceIp:
    label: 主機 IP
    placeholder: "例如: 1.2.3.4， 默認: 所有"
  sourcePort:
    label: 監聽端口
    placeholder: "例如: 80"
  status: "{count, plural,\\n=0{ 無規則 }\\n=1{#條規則 }\\nother {#條規則 }\\n}\\n"
  target: 目標
  targetPort:
    label: 端口
    placeholder: "例如: 80"
formMembers:
  members:
    addGroup: 添加組
    addMember: 添加成員
    addServiceAccount: 添加服務帳戶
    addUser: 添加用戶
    customRoles: 自定義角色
    errors:
      memberNameReq: 必須設置成員名稱。
      memberRoleReq: 必須設置成員角色。
      nameInExists: 名稱已經存在，請使用新的項目名稱。
      nameReq: 名稱(必填)
      ownerReq: 必須至少有一個具有所有者角色的成員。
    group: 用戶組
    kind:
      label: 類型
    labelText: 成員
    multipleRoles: 多個角色
    name:
      label: 名稱
    noAddUser: 您是唯一的活動註冊用戶。
    role:
      label: 角色
    serviceaccount: 服務賬號
    user: 用戶
  owner: "{type} 所有者"
formMenu:
  iframeEnabled:
    label: 使用 iframe
  link:
    label: 鏈接地址
    placeholder: e.g. https://www.example.com
  menu:
    add: 添加菜單
  name:
    label: 菜單名稱
  scope:
    cluster:
      label: 應用於集群
    project:
      label: 應用於項目
globalMonitoringPage:
  cluster: 全局監控所在集群
  confirmDisable: 你確定嗎? 再次單擊將禁用全局監控
  customAnswers:
    detail: 配置自定義的應答。
    title: 自定義應答
  disable: 禁用
  disabled: 全局監控未啟用。點擊啟用來激活全局監控。 如果在集群中啟用了集群監控並且版本不低於<code>v0.0.7000</code>，你將可以通過全局監控查看多個集群的指標。
  enableActionLabel: 啟用
  enabled: 全局監控已啟用。如果在集群中啟用了集群監控並且版本不低於<code>v0.0.7000</code>，你可以通過全局監控查看多個集群的指標。
  globalMonitoringClusterUnavailable: 集群 {clusterName} 不可用。
  grafana:
    detail: 全局 Grafana 和{appName}監控大屏的配置。
    enableGrafanaSidecar:
      label: Grafana 啟用初始化 Sidecar
    enablePersistence:
      label: Grafana 啟用持久化存儲
    serviceType:
      label: Grafana UI SVC 類型
    size:
      label: Grafana 持久化存儲大小
      placeholder: "例如: 10Gi"
    storageClass:
      label: Grafana 默認存儲類
    title: 監控大屏
  header: 全局監控（實驗性）
  insufficientSize:
    selectors:
      all: 請確保至少有一個節點與{cpu} milli cpu 和{memory} MiB 內存匹配，以啟用{component}工作負載。
      cpu: 請確保至少有一個節點將節點選擇器與{cpu} milli cpu 匹配，以啟用{component}工作負載。
      memory: 請確保至少有一個節點將節點選擇器與{memory} MiB 內存匹配，以啟用{component}工作負載。
      unsupported: 不支持值為“true”、“false”或 number 的節點選擇器
    total:
      all: 請確保至少有{minCpu} milli cpu 和{minMemory} MiB 內存可供全局監控使用。
      cpu: 請確保至少有{minCpu} milli cpu 可供全局監控使用。
      memory: 請確保您至少有{minMemory} MiB 的內存可供全局監控使用。
    workload:
      all: 請確保至少有一個節點具有{cpu} milli cpu 和{memory} MiB 內存，可用來部署{component}工作負載。
      cpu: 請確保至少有一個具有{cpu} milli cpu 的節點可用來部署{component}工作負載。
      memory: 請確保您至少有一個具有{memory} MiB 內存的節點可用來部署{component}工作負載。
  links:
    globalMonitoring:
      label: 監控大屏
    grafana:
      label: Grafana UI
    thanos:
      label: Thanos UI
  noAvailableClusters: 沒有可用集群，請先添加一個集群。
  noTemplate: 無法加載全局監控模版
  nodeSelector:
    addSelectorLabel: 添加選擇器
    helpText: 選擇要運行 {component} 工作負載的節點。
  notReady: 正在安裝全局監控到指定集群的系統項目里...
  objectStorageWarning: 每個集群中的 Thanos sidecar 都需要對象存儲的密鑰。所以這些集群的管理員也可以在集群的系統項目里看到你所配置的存儲的密鑰。
  store:
    aliyunoss:
      accessKey:
        label: 阿里雲 Access Key
        placeholder: 你的阿里雲 access key
      bucketName:
        label: 阿里雲存儲桶名稱
        placeholder: 例如：backups
      endpoint:
        beijing: 華北 2（北京）
        chengdu: 西南 1（成都）
        east-1: 美國東部 1 （弗吉尼亞）
        eu-central-1: 歐洲中部 1 （法蘭克福）
        eu-west-1: 英國（倫敦）
        hangzhou: 華東 1（杭州）
        heyuan: 華南 2（河源）
        hongkong: 中國（香港）
        huhehaote: 華北 5（呼和浩特）
        label: 阿里雲區域
        me-east-1: 中東東部 1 （迪拜）
        northeast-1: 亞太東北 1 （日本）
        qingdao: 華北 1（青島）
        shanghai: 華東 2（上海）
        shenzhen: 華南 1（深圳）
        south-1: 亞太南部 1 （孟買）
        southeast-1: 亞太東南 1 （新加坡）
        southeast-2: 亞太東南 2 （悉尼）
        southeast-3: 亞太東南 3 （吉隆坡）
        southeast-5: 亞太東南 5 （雅加達）
        west-1: 美國西部 1 （硅谷）
        zhangjiakou: 華北 3（張家口）
      label: 阿里雲 OSS
      secretKey:
        label: 阿里雲 Secret Key
        placeholder: 你的阿里雲 secret key
        provided: 已提供
    azure:
      bucketName:
        label: Container 名稱
        placeholder: 例如：mycontainer
      endpoint:
        label: Endpoint
        placeholder: 例如：http://mystorageaccount.blob.core.windows.net
      label: Azure 存儲
      maxRetries:
        label: 最大重試次數
        placeholder: 例如：0
      storageAccount:
        label: Storage Account
        placeholder: 你的 Storage Account
      storageAccountKey:
        label: Storage Account Key
        placeholder: 你的 Storage Account Key
    detail: 將多集群的 Prometheus 指標存儲到對象存儲上。
    enabled:
      label: 存儲指標到對象存儲
    gcs:
      bucketName:
        label: 存儲桶名稱
        placeholder: 例如：backups
      label: Google 雲存儲
      serviceAccount:
        label: Service Account
        placeholder: 你的 Google service account
    s3:
      accessKey:
        label: S3 Access Key
        placeholder: 你的 AWS access key
      bucketName:
        label: S3 存儲桶名稱
        placeholder: 例如：backups
      endpoint:
        label: S3 區域地址
        placeholder: 例如：s3.us-west-2.amazonaws.com
      label: S3
      secretKey:
        label: S3 Secret Key
        placeholder: 你的 AWS secret key
        provided: 已提供
    tencentcloudcos:
      appid:
        label: APP ID
        placeholder: 例如：1250000000
      bucketName:
        label: 存儲桶名稱
        placeholder: 例如：backups
      label: 騰訊雲 COS
      region:
        label: 區域
        placeholder: 例如：cos.ap-beijing-1.myqcloud.com
      secretId:
        label: 密鑰 ID
        placeholder: 騰訊雲密鑰 ID
      secretKey:
        label: 密鑰 Key
        placeholder: 騰訊雲密鑰 Key
    title: 對象存儲
  svc:
    clusterIp: "{appName}代理"
    loadBalancer: 4 層負載均衡
    nodePort: NodePort
  thanos:
    detail: 查詢多集群 Prometheus 指標的組件。
    serviceType:
      label: Thanos Query UI 服務類型
    title: Thanos Query
  updating: 正在更新全局監控組件...
  version: 全局監控版本
hostsPage:
  addContainer: 添加容器
  cloudHostsPage:
    addPage:
      driver: "驅動: "
      env: 環境
      header: 添加主機
      instance: "類型:"
      launch: 啟動
      name:
        label: 主機名稱
        placeholder: "例如: node01"
      os: "操作系統: "
      size: "大小: "
      storage: "存儲:"
      template: "模板名稱: "
      transfer: "流量限制:"
      transferUnit: TB
      zone: "區域:"
  hostPage:
    conditions:
      diskPressure: 磁盤負載
      diskSpace: 磁盤空間
      memoryPressure: 內存負載
      ready: Kubelet
    containerDVersion: Containerd 版本
    containersTab:
      detail: 在此主機上運行的容器列表
      header: 容器
    dockerVersion: Docker 版本
    header:
      title: "主機: {name}"
    hostname: 主機名
    infoMultiStats:
      cpu: CPU
      docker: "Docker:"
      ip: IP 地址
      kernel: 內核
      memory: 內存
      milliCpu:
        labelText: mCPU
      os: 操作系統
      provider:
        labelText: "供應商: "
        noHost: 自定義
      storage: 數據卷
    ipAddress: IP 地址
    kernelVersion: 內核版本
    kubeProxyVersion: Kube-Proxy 版本
    kubeletVersion: Kubelet 版本
    limits:
      cpu: "CPU 限制: "
      memory: "內存限制: "
      storage: "本地卷限制: "
    operatingSystem: 操作系統
    portsTab:
      detail: 這些屬性顯示哪些端口已被映射到哪裡
      header: 端口
      table:
        body:
          noData: 主機當前未映射任何端口
        header:
          container: 容器
          ip: IP 地址
          port: 端口
          service: 服務
    storageTab:
      detail: 這些屬性顯示主機卷細節
      header: 卷
      table:
        body:
          noData: 主機未使用任何數據卷
        header:
          hostPath: 主機路徑
          mounts: 掛載
          state: 狀態
    version: 版本
  new:
    addCluster:
      cluster:
        label: 集群
      description: 將此新主機附加到集群，委派角色等
      label: 集群選項
      roles:
        label: 角色
      table:
        label:
          control: 用於管理
          etcd: 用於 etcd
          worker: 作為 worker 節點使用
    custom: 添加自定義主機
    header:
      customText: 添加自定義主機
      text: 添加主機
    manageLink: 管理 Docker-machine 驅動
    name:
      placeholder: "例如: node01"
identityBlock:
  loading: 加載中...
landingPage:
  ember: 集群管理
  emberLong: Rancher 多集群管理
  header: 默認登錄頁面
  vue: 儀錶盤
  vueLong: Rancher 儀錶盤
languageName: 簡體中文
ldap:
  accessConfig:
    connectionTimeout:
      labelText: 服務器連接超時
    defaultDomain:
      helpText: 如果用戶登錄時沒有指定域，則將使用該默認登錄域。
      labelText: 默認登錄域
      placeholder: e.g. mycompany
    groupSearchBase:
      helpText: 如果設置，則只在此起點下搜索組，而不是在用戶搜索起點下搜索組。
      labelText: 組搜索起點
      placeholder: e.g. ou=Groups,dc=mycompany,dc=com
    header: 1. 配置 {providerName} 服務器
    port:
      labelText: 端口
      radioGroup:
        label: 加密
        none: None
        starttls: STARTTLS
        tls: TLS
    serviceAccountDistinguishedName:
      labelText: 服務帳戶用戶名
    starttls:
      helpText: 通過在連接過程中使用 TLS 來封裝未加密的連接。不能與 TLS 一起使用。
      label: Start TLS
    subtext1: 輸入連接到 {providerName} 服務器的地址、端口和協議。<code>389</code> 是不安全的標準端口，<code>636</code> 用於 TLS。
    subtext2: "{appName} 需要一個服務帳戶，該帳戶可以(只讀)訪問所有能夠登錄的域，這樣我們就可以確定當用戶使用 API 密鑰發出請求時，該用戶屬於哪個組。"
    userSearchBase:
      labelText: 用戶搜索起點
      placeholder: e.g. ou=users,dc=mycompany,dc=com
  accessEnabled:
    connectionTimeout:
      labelText: "服務器連接超時: "
    disable:
      confirmDisable:
        pre: 禁用訪問控制
    general:
      defaultDomain: "默認域: "
      encryption: 加密
      header: 常規
      searchBase: "搜索起點:"
      server: "Server:"
      serviceAccount: "服務帳戶用戶名:"
      tls: "TLS:"
    group:
      header: 用戶組
      name: "名稱屬性:"
      objectClass: "對象類:"
      search: "搜索屬性:"
      searchFilter: "搜索過濾器:"
      uniqueId: "唯一標識:"
    header: 身份驗證
    serviceAccountDistinguishedName:
      labelText: "服務帳戶識別名:"
    subtext: 要更改服務器配置，請禁用下面的訪問控制，然後重新設置。
    users:
      disabledBitMask: "Disabled BitMask:"
      enabled: "狀態屬性:"
      header: 用戶
      login: "登錄屬性:"
      name: "用戶名屬性:"
      objectClass: "對象類:"
      search: "搜索屬性:"
      searchFilter: "搜索過濾器:"
      uniqueId: "唯一標識:"
  customizeSchema:
    cert:
      helpText: 如果需要，請輸入 CA 證書。
      labelText: CA 證書
      placeholder: 粘貼證書，以 -----BEGIN CERTIFICATE----- 開始。
    groups:
      groupDN:
        labelText: 組 DN 屬性
        placeholder: distinguishedName
      groupMemberMapping:
        labelText: 組成員映射屬性
      groupMemberUser:
        labelText: 組成員用戶屬性
        placeholder: uid
      groupUniqueIdAttribute:
        helpText: 請使用用戶組創建後全局唯一的屬性，避免因該屬性值變化導致用戶權限丟失
        labelText: 組唯一標識
      header: 用戶組
      name:
        labelText: 名稱屬性
      nestedGroup:
        disabled:
          labelText: 只搜索直接組成員
        enabled:
          helpText: 嵌套搜索在大型目錄中可能會更慢
          labelText: 搜索直接和嵌套的組成員
        title: 嵌套的組成員
      objectClass:
        labelText: 對象類
      search:
        labelText: 搜索屬性
      searchFilter:
        labelText: 搜索過濾器
    header: 2. 自定義模式
    helpText: 如果您的架構與標準 Active Directory 格式不匹配，您可以在這裡自定義。
    users:
      disabledBitMask:
        labelText: Disabled Status Bitmask
      enabledAttribute:
        labelText: 用戶啟用屬性
      header: 用戶
      login:
        labelText: 登錄屬性
      name:
        labelText: 用戶名屬性
      objectClass:
        labelText: 對象類
      search:
        labelText: 搜索屬性
      searchBase:
        labelText: 用戶搜索起點
      searchFilter:
        labelText: 搜索過濾器
      userMemberAttribute:
        labelText: 用戶成員屬性
      userUniqueIdAttribute:
        helpText: 請使用用戶創建後全局唯一的用戶屬性，避免因該屬性值變化導致用戶權限丟失
        labelText: 用戶唯一標識
  header:
    disabled:
      label: "{providerName} 未配置"
  providerName:
    ad: Active Directory
    freeipa: FreeIPA
    openldap: OpenLDAP
    saveLabels:
      ad: 啟用 Active Directory 認證
      freeipa: 啟用 FreeIPA 認證
      openldap: 啟用 OpenLDAP 認證
  testAuth:
    authenticate:
      post: 測試中...
      pre: 身份驗證
    header: 3. 測試並啟用認證
    helpText: "通過使用您的 {providerName} 帳戶測試身份驗證，檢查一切配置是否正確:"
    password:
      labelText: AD 用戶密碼
    userName:
      labelText: AD 用戶名
machineTemplatesPage:
  custom: 自定義添加一台現有的正在運行 Docker 的主機。
  new:
    btn: 設置
    helpText: 啟動新的主機或通過 SSH 導入已經運行 Docker 的主機。
  templateBox:
    button: 選擇
    labels:
      region: 實例所在地區
      zone: 區域
  title: 添加主機
membersPage:
  add:
    form:
      kind: 類型
      member: 成員
      role: 角色
    title: 添加 {type} 成員
  index:
    localLink: 添加成員
    table:
      created: 創建時間
      name: 名稱
      noData: 目前還沒有成員
      noMatch: 沒有成員與當前搜索匹配
      subjectKind: 類型
      template: 角色
      userId: 用戶
  title: 成員
modalAboutComponent:
  cattle: Cattle
  cli: 命令行
  component: 組件
  helm: Helm
  linuxImageList: Linux 鏡像列表
  machine: 主機
  ui: 用戶界面
  version: 版本
  windowsImageList: Windows 鏡像列表
modalAddCloudKey:
  amazonec2:
    accessKey:
      label: Access Key
      placeholder: Your AWS access key
    secretKey:
      label: Secret Key
      placeholder: Your AWS secret key
  azure:
    clientId:
      label: Client ID
      placeholder: Your Client ID
    clientSecret:
      label: Client Secret
      placeholder: Your Client Secret
  description:
    placeholder: "例如: cloud credential for production"
  digitalocean:
    accessToken:
      help: |
        粘貼來自 DigitalOcean 的
        <a href="https://cloud.digitalocean.com/settings/api/tokens" target="_blank" rel="nofollow noreferrer noopener">Applications & API</a>。
      label: Access Token
      placeholder: 您的 DigitalOcean API 訪問令牌。
  errors:
    region: 您必須選擇一個區域來驗證您的密鑰。
    validation: "{ status }: 驗證密鑰時出現問題，請輸入有效憑證，然後重試。"
  header:
    edit: 編輯雲憑證
    new: 添加雲憑證
  linode:
    authAccountButton: "下一步: 實例配置"
    token:
      help: |
        從 Linode 粘貼個人訪問令牌
        <a href="https://cloud.linode.com/profile/tokens" target="_blank" rel="nofollow noreferrer noopener">API Tokens</a> screen
      label: 訪問令牌
      placeholder: 您的 Linode API 訪問令牌
  name:
    placeholder: "例如: production-credentials"
  oci:
    authRegion:
      help: Any region your tenancy is subscribed to authenticate your credentials.
      label: Region
    secretKey:
      label: 用戶私鑰
      placeholder: 指定 OCI 用戶的私有 API 密鑰內容(PEM 格式)
    secretKeyPassphrase:
      label: 用戶私鑰密碼
      placeholder: 保護指定的 OCI 用戶的私鑰文件的密碼(如果有的話)
    tenancyOcid:
      label: Tenancy OCID
      placeholder: The OCID of the tenancy in the user account exists
    userFingerprint:
      label: 用戶指紋
      placeholder: 與指定用戶的私有 API 密鑰對應的指紋
    userOcid:
      label: User OCID
      placeholder: The OCID of a user
  pnap:
    clientIdentifier:
      label: Client ID
      placeholder: Your Client ID
    clientSecret:
      help: From <a href="https://bmc.phoenixnap.com/applications/" target="_blank" rel="nofollow noreferrer noopener">phoenixNAP BMC Portal</a> Application Credentials
      label: Client Secret
      placeholder: Your Client Secret
  saving:
    validating: 確認鍵
  type: 憑證類型
  typeSelect:
    prompt: 選擇雲憑證提供商類型
  vmwarevsphere:
    password:
      label: 密碼
modalHostEvacuate:
  button: 疏散
  header: 確認進行疏散操作
  helpText: 此操作將停用該主機並刪除主機上所有運行的非基礎設施容器
  protip: "進階提示: 在點擊時按住 {key} 鍵以跳過確認操作"
modalShortcuts:
  cluster: 集群
  delete: 刪除所選擇的 (在表視圖中)
  global: 全局
  kubectl: Kubectl Shell
  nextTab: 下一頁
  other: 其他東西
  project: 項目
  search: 聚焦搜索字段
  shift: Shift-{key}
  shortcuts: 您在此處
  time: 時間
  title:
    pl: 快捷鍵
    rancher: 歡迎來到傳送門！
  viewGroup: 切換分組視圖
  world: 世界
model:
  account:
    kind:
      admin: 管理員
      agent: 代理
      project: 環境
      registeredAgent: 已註冊的代理
      service: 服務
      user: 用戶
  cluster:
    name: 集群名
  identity:
    displayType:
      group: 用戶組
      localUser: 本地用戶
      org: 組織
      team: 團隊
      unknown: "{type}？"
      user: 用戶
  ingress:
    displayKind: L7 Ingress
  machine:
    role:
      controlPlane: Control
      etcd: etcd
      worker: Worker
  openldapconfig:
    domain:
      help: 僅該搜索起點下的用戶能夠訪問
      label: "用戶搜索起點:"
      placeholder: "例如: ou=Users,dc=mycompany,dc=com"
    server:
      label: 域名或 IP 地址
    serviceAccountPassword:
      label: 服務賬號密碼
    serviceAccountUsername:
      label: 服務賬號用戶名
  projectMember:
    role:
      member: 成員
      owner: 所有者
      readonly: 只讀
      restricted: 受限
  service:
    displayKind:
      generic: 服務
      loadBalancer: L4 層負載均衡
monitoringPage:
  cluster:
    disabled: 當前集群監控尚未啟用。
    title: 集群監控配置
    toDisable: 監控已啟用。點擊下面的保存按鈕來禁用當前集群的監控。
  clusterNotEnabled: 集群級別監控未啟用。將只採集自定義指標。
  config:
    gpuMonitoring:
      enable: 啟用 GPU 監控
    grafana:
      enablePersistence:
        label: 為 Grafana 啟用持久化存儲
      size:
        label: Grafana 持久化存儲大小
        placeholder: "例如: 10Gi"
      storageClass:
        label: Grafana 默認存儲類
    header: Prometheus 配置
    nodeexporter:
      cpuLimit:
        label: Node Exporter CPU 限制
        placeholder: "例如: 200"
        unit: milli CPUs
      enable: 啟用 Node Exporter
      label: Node Exporter 主機端口
      memoryLimit:
        label: Node Exporter 內存限制
        placeholder: "例如: 200"
    operator:
      memoryLimit:
        label: Prometheus Operator 內存限制
        placeholder: "例如: 500"
    prometheus:
      cpuLimit:
        label: Prometheus CPU 限制
        placeholder: "例如: 1000"
        unit: milli CPUs
      cpuRequest:
        label: Prometheus CPU 預留
        placeholder: "例如: 1000"
        unit: milli CPUs
      enablePersistence:
        label: 為 Prometheus 啟用持久化存儲
      memoryLimit:
        label: Prometheus 內存限制
        placeholder: "例如: 1000"
      memoryRequest:
        label: Prometheus 內存預留
        placeholder: "例如: 1000"
      size:
        label: Prometheus 持久化存儲大小
        placeholder: "例如: 50Gi"
      storageClass:
        label: Prometheus 默認存儲類
    retention:
      label: 數據保存時間
    storageClass:
      label: 存儲類
    types:
      none: None
      prometheus: Prometheus
  confirmDisable: 你確定嗎？再次點擊將會禁用監控。
  disable: 禁用監控
  enableActionLabel: 啟用監控
  errors:
    disableIstioFirst: 在禁用集群監控之前，需要先禁用 Istio。
  insufficientSize:
    prometheus:
      all: 請確保你至少有一個節點有 {cpu} milli CPUs 和 {memory} MiB 內存可用來激活 Prometheus 工作負載。
      cpu: 請確保你至少有一個節點有 {cpu} milli CPUs 可用來激活 Prometheus 工作負載。
      memory: 請確保你至少有一個節點有 {memory} MiB 內存可用來激活 Prometheus 工作負載。
    selectors:
      all: 請確保你至少有一個匹配節點選擇器的節點有 {cpu} milli CPUs 和 {memory} MiB 內存可用來激活 Prometheus 工作負載。
      cpu: 請確保你至少有一個匹配節點選擇器的節點有 {cpu} milli CPUs 可用來激活 Prometheus 工作負載。
      memory: 請確保你至少有一個匹配節點選擇器的節點有 {memory} MiB 內存可用來激活 Prometheus 工作負載。
    total:
      all: 請確保你至少有 {cpu} milli CPUs 和 {memory} MiB 內存可用來激活監控。
      cpu: 請確保你至少有 {cpu} milli CPUs 可用來激活監控。
      memory: 請確保你至少有 {memory} MiB 內存可用來激活監控。
  noPermission: 您沒有權限配置 {level} 級別監控。
  nodeSelector:
    addSelectorLabel: 添加選擇器
    helpText: 選擇部署監控相關的工作負載所運行的節點。
  project:
    disabled: 當前項目監控尚未啟用。
    title: 項目監控配置
    toDisable: 監控已啟用。點擊下面的保存按鈕來禁用當前項目的監控。
  prometheus: 監控尚未啟用，點擊下面的保存按鈕去啟用監控。
  resourceLimitsHelp: "啟用集群監視時，需要確保工作節點和 Prometheus pod 具有足夠的資源。請訪問 <a href=\\"https://rancher.com/docs/rancher/v2.x/en/cluster-admin/tools/monitoring/#resource-consumption\\" target=\\"_blank\\" rel=\\"nofollow noreferrer\\">Rancher docs</a>了解建議的資源限制。"
  systemProject: 如果您想為系統項目中的 pods 收集自定義指標，請直接啟用集群級別監控。
  toUpdate:
    cluster: 集群級別監控已啟用。
    project: 項目級別監控已啟用。
  update: 更新監控配置
  upgrade: 升級監控組件到最新版本 {version}。
  upgradeAvailable: (最新版本 {version})
  version: 監控組件版本
newConfigMap:
  addActionLabel: 添加配置映射值
  description:
    placeholder: "例如: app"
  name:
    placeholder: "例如: map"
  title:
    edit: "編輯配置映射: {name}"
    new: 添加配置映射
    view: "配置映射: {name}"
  values:
    binaryLabel: 配置映射值(二進制值)
    label: 配置映射
newPassword:
  confirmPassword: 確認密碼
  password: 新密碼
  passwordNoMatch: 密碼不匹配
  placeholder: 新密碼
pipelinesPage:
  lastActivity: 最後運行
  pipelines: 流水線
  table:
    noData: 沒有配置流水線
    noMatch: 沒有符合當前搜索的流水線規則
    status: 狀態
podPage:
  containerImage: "{container} 的鏡像"
  displayImage: "{image} + 其他 {sidecar, plural, =1 {1 個 image} other {#個 images}}"
  header: "Pod: {name}"
  image: 鏡像
  nodeIp: Node
  podIp: Pod IP
podSecurityPoliciesPage:
  addPodSecurityPolicy: 添加策略
  detail:
    header: 策略
  editPodSecurityPolicy: 編輯策略
  index:
    description: 將策略應用於由具有此角色的用戶創建的 Pod。
    header: Pod 安全策略
    table:
      created: 創建時間
      name: 名稱
      noData: 未配置 Pod 安全策略
      noMatch: 沒有與當前搜索匹配的 Pod 安全策略。
  new:
    errors:
      nameInExists: 名稱已存在，請使用新的 Pod 安全策略名稱。
      nameReq: 名稱 (必填)
    form:
      name:
        labelText: 名稱
        placeholder: "例如: 策略"
  saveEdit: 編輯
  saveNew: 創建
projectRow:
  none: 沒有描述
  orchestration: 編排
realmNames:
  all: 全部
  asia: 亞洲
  euEast: 歐洲東部
  euWest: 歐洲西部
  usEast: 美國東部
  usWest: 美國西部
repositories:
  enable: 設置代碼庫
  header: 代碼庫
  message: 選擇示例代碼庫或者使用您自己的代碼庫來設置流水線。
  table:
    noData: 沒有任何代碼庫
    noMatch: 沒有代碼庫符合當前搜索
    repository: 代碼庫
saveCancel:
  cancel: 取消
  create: 創建
  edit: 保存
  next: 下一步
  saved: 已保存!
  saving: 保存中...
schedulingRuleRow:
  containerLabel: 容器標籤
  containerName: 容器名稱
  haveA: 具有
  hostLabel: 主機標籤
  must: 必須
  mustNot: 必須沒有
  of: 其
  serviceName: 服務名稱
  should: 最好
  shouldNot: 最好沒有
  theHost: 主機
searchableSelect:
  noMatch: 沒有匹配
  noOptions: 沒有可用的選項
servicePartial:
  noContainers:
    inactive:
      start: 啟動
    label: 沒有容器
tooltipExpire:
  label: 此集群證書即將過期。
  link: 立即輪換證書
volumeSource:
  aws-ebs:
    title: Amazon EBS 磁盤
  azure-disk:
    title: Azure 磁盤
  azure-file:
    title: Azure 文件系統
  cephfs:
    title: Ceph 文件系統
  cinder:
    title: Openstack Cinder Volume
  config-map:
    title: 配置卷映射
  csi:
    title: CSI
  csi-volume-longhorn:
    title: Longhorn
  customLogPath:
    logFormat:
      helpText: 您可以在 </a>此處<a href="http://fluentular.herokuapp.com/" target="_blank"> 測試正則表達式。
      label: 日誌格式
      useCustomRegex: 使用自定義 Fluentd 正則表達式
      useExistingLogFormat: 使用現有的日誌格式
    mountPath:
      helpText: 容器中的日誌路徑
      label: 日誌路徑
      placeholder: "例如: /var/www"
  empty-dir:
    title: emptyDir 卷
  fc:
    title: 網狀通道
  flex-volume:
    title: Flex 卷
  flocker:
    title: Flocker
  gce-pd:
    title: Google 持久磁盤
  glusterfs:
    title: Gluster 卷
  host-path:
    kind:
      Any: 不檢查目標路徑
      BlockDevice: 現有 block 設備
      CharDevice: 現有 character 設備
      Directory: 現有目錄
      DirectoryOrCreate: "目錄: 不存在則創建"
      File: 現有文件
      FileOrCreate: "文件: 不存在則創建"
      Socket: 現有 socket 文件
      label: 主機路徑類型檢查
    path:
      label: 主機路徑
      placeholder: "例如: /data"
    title: HostPath
  iscsi:
    title: iSCSI 目標
  local:
    title: Local
  nfs:
    title: NFS 共享
  photon:
    title: Photon 卷
  portworx:
    title: Portworx 卷
  quobyte:
    title: Quobyte 卷
  rbd:
    title: Ceph RBD
  scaleio:
    title: ScaleIO 卷
  secret:
    title: Secret 卷
  storageos:
    title: 存儲操作系統
  vsphere-volume:
    title: VMWare vSphere 卷
waitKubernetes:
  activateHost: 等待主機激活
  addHost: 添加至少一台主機
  createStack: 創建 Kubernetes 系統應用棧
  startServices: 啟動服務
  waitApi: 等待 Kubernetes API
yamlPage:
  errors: yaml 文件中存在錯誤
